import pandas as pd
import numpy as np

def ks_por_safra(df, score_col, target_col, safra_col):
    # Cria um dataframe com as colunas de score, target e safra
    df_ks = pd.DataFrame({score_col: df[score_col], target_col: df[target_col], safra_col: df[safra_col]})

    # Cria um dataframe com as estatísticas de cada safra
    df_safra = df_ks.groupby(safra_col).agg({score_col: ['min', 'max', 'count'], target_col: 'sum'})

    # Cria colunas para o número acumulado de observações e eventos
    df_safra['cumulative_count'] = df_safra[score_col]['count'].cumsum()
    df_safra['cumulative_event'] = df_safra[target_col]['sum'].cumsum()

    # Calcula as proporções acumuladas de observações e eventos
    total_count = df_safra[score_col]['count'].sum()
    total_event = df_safra[target_col]['sum'].sum()
    df_safra['cumulative_percent'] = df_safra['cumulative_count'] / total_count
    df_safra['cumulative_event_percent'] = df_safra['cumulative_event'] / total_event

    # Calcula as proporções acumuladas de não eventos
    df_safra['cumulative_non_event_percent'] = (df_safra['cumulative_count'] - df_safra[target_col]['sum'].cumsum()) / (total_count - total_event)

    # Calcula a diferença entre as proporções acumuladas de eventos e não eventos
    df_safra['ks'] = df_safra['cumulative_event_percent'] - df_safra['cumulative_non_event_percent']

    # Retorna um dataframe com os valores de KS de cada safra
    return df_safra['ks']
