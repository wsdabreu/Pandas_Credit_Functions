import pandas as pd
import numpy as np

def ks_por_decil_e_safra(df, score_col, target_col, safra_col, n_decis=10):
    # Cria uma cópia do dataframe original
    df_ks = df[[score_col, target_col, safra_col]].copy()

    # Cria coluna com o total de observações por safra
    df_ks['total_obs'] = df_ks.groupby(safra_col)[score_col].transform('count')

    # Inicializa um dataframe vazio para armazenar os resultados de cada safra
    ks_table = pd.DataFrame()

    # Loop pelas safras
    for s in df_ks[safra_col].unique():
        # Faz subset da safra atual
        df_safra = df_ks[df_ks[safra_col] == s].copy()

        # Divide a variável de score em n_decis decis usando a função qcut do pandas
        df_safra['decil'] = pd.qcut(df_safra[score_col], n_decis, labels=False) + 1

        # Cria um dataframe com as estatísticas de cada decil
        df_decis = df_safra.groupby('decil').agg({score_col: ['min', 'max', 'count'], target_col: 'sum'})

        # Cria colunas para o número acumulado de observações e eventos
        df_decis['cumulative_count'] = df_decis[score_col]['count'].cumsum()
        df_decis['cumulative_event'] = df_decis[target_col]['sum'].cumsum()

        # Calcula as proporções acumuladas de observações e eventos
        total_count = df_safra['total_obs'].sum()
        total_event = df_decis[target_col]['sum'].sum()
        df_decis['cumulative_percent'] = df_decis['cumulative_count'] / total_count
        df_decis['cumulative_event_percent'] = df_decis['cumulative_event'] / total_event

        # Calcula as proporções acumuladas de não eventos
        df_decis['cumulative_non_event_percent'] = (df_decis['cumulative_count'] - df_decis[target_col]['sum']) / (total_count - total_event)

        # Calcula a diferença entre as proporções acumuladas de eventos e não eventos
        df_decis['ks'] = df_decis['cumulative_event_percent'] - df_decis['cumulative_non_event_percent']

        # Adiciona a coluna com o valor de KS de cada decil como uma nova coluna ao dataframe de resultado
        ks_table[s] = df_decis['ks'].values

    # Adiciona a linha com a média de KS de cada decil ao final do dataframe de resultado
    ks_table.loc['Média'] = ks_table.mean()

    return ks_table
