import pandas as pd
import numpy as np

def ks_por_safra_e_decil(df, score_col, target_col, safra_col, n_decis=10):
    # Cria um dataframe com as colunas de score, target e safra
    df_ks = pd.DataFrame({score_col: df[score_col], target_col: df[target_col], safra_col: df[safra_col]})

    ks_tables = []
    for safra in df_ks[safra_col].unique():
        # Seleciona apenas as observações da safra atual
        df_safra = df_ks[df_ks[safra_col] == safra].copy()

        # Divide a variável de score em n_decis decis usando a função qcut do pandas
        df_safra['decil'] = pd.qcut(df_safra[score_col], n_decis, labels=False) + 1

        # Cria um dataframe com as estatísticas de cada decil
        df_decis = df_safra.groupby('decil').agg({score_col: ['min', 'max', 'count'], target_col: 'sum'})

        # Cria colunas para o número acumulado de observações e eventos
        df_decis['cumulative_count'] = df_decis[score_col]['count'].cumsum()
        df_decis['cumulative_event'] = df_decis[target_col]['sum'].cumsum()

        # Calcula as proporções acumuladas de observações e eventos
        total_count = df_decis[score_col]['count'].sum()
        total_event = df_decis[target_col]['sum'].sum()
        df_decis['cumulative_percent'] = df_decis['cumulative_count'] / total_count
        df_decis['cumulative_event_percent'] = df_decis['cumulative_event'] / total_event

        # Calcula as proporções acumuladas de não eventos
        df_decis['cumulative_non_event_percent'] = (df_decis['cumulative_count'] - df_decis[target_col]['sum']) / (total_count - total_event)

        # Calcula a diferença entre as proporções acumuladas de eventos e não eventos
        df_decis['ks'] = df_decis['cumulative_event_percent'] - df_decis['cumulative_non_event_percent']

        # Cria um dataframe com os valores de KS de cada decil da safra atual
        ks_table = df_decis['ks'].to_frame().transpose()
        ks_table.columns = [f'safra_{safra}_decil_{d}' for d in range(1, n_decis+1)]

        ks_tables.append(ks_table)

    # Juntando todas as tabelas de safra em um único dataframe
    ks_table = pd.concat(ks_tables, axis=1)

    # Retorna o dataframe com os valores de KS por safra e por decil
    return ks_table
